# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
    - 
      name: Bump Patch Version
      run: |
        # Extract the current version from the pom.xml file
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        
        # Increment the Patch version (assuming your version format is X.Y.Z)
        patch_version=$(echo $current_version | awk -F. '{print $3}')
        ((patch_version++))
        new_version=$(echo $current_version | awk -F. -v patch_version=$patch_version '{$3=patch_version; OFS="."; print}')
        
        # Update the pom.xml file with the new version
        mvn versions:set -DnewVersion=$new_version

        # Commit the version change
        git commit -am "Bump Patch Version to $new_version"
        git push
  
      
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/java_app:latest
